How did viewing a diff between two versions of a file help you see the bug that was introduced?

It is very easy to spot the differences in two files, 
as the command gives line by line analysis of the files and its 
differences.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Answer : We can always revert to the working solution if the modifications do not work, it teaches us a lot of concepts in the specific language.

Why do you think that manual commit has more advantages over automatically saved versions?
Answer: You have more control over when to commit. We can commit one single logical change, whereas the automatic version controllers cannot.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Answer: In case of Git, it couples and tracks all the related files together. Hence, it allows for saving multiple files in the same commit. This is not the case for Google Docs.


How can you use the commands git log and git diff to view the history of files?
Answer: The git log gives an overview of all commits with messages. Git diff gives what lines were added or deleted between two commits.
